{"version":3,"sources":["index.js"],"names":["Header","props","icon","faFreeCodeCamp","className","title","faWindowMaximize","onClick","handleResize","Panel","state","fullScreen","bind","this","setState","css","toLowerCase","component","React","Component","MarkDownPreviewer","input","handleChange","createMarkup","event","target","value","console","log","marked","__html","breaks","Fragment","charSet","name","content","id","onChange","dangerouslySetInnerHTML","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAwCA,SAASA,EAAOC,GACd,OACE,gCACE,kBAAC,IAAD,CAAiBC,KAAMC,IAAgBC,UAAU,SACjD,wBAAIA,UAAU,iBAAiBH,EAAMI,OACrC,kBAAC,IAAD,CAAiBH,KAAMI,IAAkBF,UAAU,mBAAmBG,QAASN,EAAMO,gB,IAKrFC,E,kDACJ,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IACDS,MAAQ,CACXC,YAAY,GAEd,EAAKH,aAAe,EAAKA,aAAaI,KAAlB,gBALH,E,2DAQfC,KAAKC,SAAS,CAACH,YAAaE,KAAKH,MAAMC,e,+BAGzC,IAAMI,EAAOF,KAAKZ,MAAMI,MAAOW,cAC/B,OACE,6BAASZ,UAAWS,KAAKH,MAAMC,WAAX,UAA2BI,EAA3B,YAAkCA,EAAlC,gBAAsDA,GACxE,kBAACf,EAAD,CAAQK,MAAOQ,KAAKZ,MAAMI,MAAOG,aAAcK,KAAKL,eACnDK,KAAKZ,MAAMgB,e,GAhBAC,IAAMC,WAsBpBC,E,kDACJ,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IACDS,MAAQ,CACTW,MAAO,QAEX,EAAKC,aAAe,EAAKA,aAAaV,KAAlB,gBACpB,EAAKW,aAAe,EAAKA,aAAaX,KAAlB,gBANH,E,gEAUjBC,KAAKC,SAAS,CAACO,MAzED,imB,mCA4EHG,GACXX,KAAKC,SAAS,CAACO,MAAOG,EAAMC,OAAOC,U,qCAKnC,OADAC,QAAQC,IAAIC,IAAOhB,KAAKH,MAAMW,QACxB,CAACS,OAAQD,IAAOhB,KAAKH,MAAMW,MAAO,CAACU,QAAQ,O,+BAIjD,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,SAAD,KACE,0BAAMC,QAAQ,UACd,+DACA,0BAAMC,KAAK,WAAWC,QAAQ,2DAEhC,kBAAC1B,EAAD,CAAOQ,UAAW,8BAAUmB,GAAG,SAASV,MAAOb,KAAKH,MAAMW,MAAOgB,SAAUxB,KAAKS,eAA2BjB,MAAO,WAClH,kBAACI,EAAD,CAAOQ,UAAW,yBAAKmB,GAAG,UAAUE,wBAAyBzB,KAAKU,iBAAoBlB,MAAO,cAC7F,kBAAC,IAAD,W,GAjCwBa,IAAMC,WAuCtCoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACrB,EAAD,OAEFsB,SAASC,eAAe,U","file":"static/js/main.f9895c85.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faWindowMaximize } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFreeCodeCamp } from '@fortawesome/free-brands-svg-icons';\r\nimport marked from 'marked';\r\nimport ReactFCCtest from 'react-fcctest';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst defaultInput = `# Welcome to my React Markdown Previewer!\r\n## This is a subheading!\r\n\r\nTesting a line break\r\nhere is the second line\r\n\r\nHere's an example of a [link](https://github.com/ravenblack24/markdown-previewer)\r\n\r\nThis is some _inline_ sample code \\`<div>Hello World!</div>\\`\r\n\r\n\\`\\`\\`\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == \\\"\\`\\`\\`\\\" && lastLine == \\\"\\`\\`\\`\\\") {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\r\nHow about some **list items** next:\r\n\r\n- List item 1\r\n-- Sub list item\r\n- List item 2\r\n\r\n> Look, a block quote!\r\n\r\n### Last _but not least_:\r\n\r\n![React Logo w/ Text](https://goo.gl/Umyytc)`;\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header>\r\n      <FontAwesomeIcon icon={faFreeCodeCamp} className=\"icon\" />\r\n      <h1 className=\"section-title\">{props.title}</h1>\r\n      <FontAwesomeIcon icon={faWindowMaximize} className=\"icon icon-action\" onClick={props.handleResize} />\r\n    </header>\r\n  );\r\n} \r\n\r\nclass Panel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullScreen: false\r\n    }\r\n    this.handleResize = this.handleResize.bind(this);\r\n  }\r\n  handleResize() {\r\n      this.setState({fullScreen: !this.state.fullScreen});\r\n  }\r\n  render () {\r\n    const css = (this.props.title).toLowerCase();\r\n    return (\r\n      <section className={this.state.fullScreen ? `${css} ${css}--fullscreen` : css}>\r\n        <Header title={this.props.title} handleResize={this.handleResize}/>\r\n        {this.props.component}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nclass MarkDownPreviewer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        input: 'hiya'\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.createMarkup = this.createMarkup.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({input: defaultInput});\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({input: event.target.value});\r\n  }\r\n\r\n  createMarkup() {\r\n    console.log(marked(this.state.input));\r\n    return{__html: marked(this.state.input, {breaks: true})}\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>ReactJS - Markdown Previewer</title>\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n\t      </Helmet>\r\n        <Panel component={<textarea id=\"editor\" value={this.state.input} onChange={this.handleChange}></textarea>} title={\"Editor\"}/>\r\n        <Panel component={<div id=\"preview\" dangerouslySetInnerHTML={this.createMarkup()} />} title={\"Previewer\"}/>\r\n        <ReactFCCtest />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MarkDownPreviewer />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}